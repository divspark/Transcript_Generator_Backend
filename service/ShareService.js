import nodemailer from "nodemailer";
import dotenv from "dotenv";

dotenv.config();

export const sendSummary = async ({ summary, recipients, subject, note }) => {
  if (!recipients || !recipients.length) {
    throw new Error("Recipients array cannot be empty");
  }

  // Create transporter
  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.GMAIL_USER,
      pass: process.env.GMAIL_PASS
    }
  });

    const htmlContent = `
    <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 700px; margin: auto; padding: 20px; background-color: #f9f9f9; border-radius: 8px; color: #333;">
        
        <header style="text-align: center; margin-bottom: 30px;">
        <h1 style="margin: 0; color: #1a73e8;">${subject || "Meeting Summary"}</h1>
        ${note ? `<p style="color: #555; margin-top: 5px;">${note}</p>` : ''}
        </header>

        <section style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05); margin-bottom: 20px;">
        <h2 style="color: #1a73e8; margin-bottom: 10px;">Summary</h2>
        <p style="font-weight: 600; margin-bottom: 10px;">${summary.title || ""}</p>
        <ul style="padding-left: 20px; color: #555;">
            ${summary.executiveSummary?.map(item => `<li style="margin-bottom: 5px;">${item}</li>`).join("") || ""}
        </ul>
        </section>

        <section style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05); margin-bottom: 20px;">
        <h2 style="color: #1a73e8; margin-bottom: 10px;">Action Items</h2>
        <ul style="padding-left: 20px; color: #555;">
            ${summary.actionItems?.map(a => `<li style="margin-bottom: 5px;"><strong>${a.assignee}</strong>: ${a.text} (Due: ${a.dueDate})</li>`).join("") || ""}
        </ul>
        </section>

        <section style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05); margin-bottom: 20px;">
        <h2 style="color: #1a73e8; margin-bottom: 10px;">Decisions</h2>
        <ul style="padding-left: 20px; color: #555;">
            ${summary.decisions?.map(d => `<li style="margin-bottom: 5px;">${d}</li>`).join("") || ""}
        </ul>
        </section>

        <section style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05); margin-bottom: 20px;">
        <h2 style="color: #1a73e8; margin-bottom: 10px;">Attendees</h2>
        <p style="color: #555;">${summary.attendees?.join(", ") || ""}</p>
        </section>

        <section style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05); margin-bottom: 20px;">
        <h2 style="color: #1a73e8; margin-bottom: 10px;">Timestamps</h2>
        <ul style="padding-left: 20px; color: #555;">
            ${summary.timestamps?.map(t => `<li style="margin-bottom: 5px;">${t.time} - ${t.note}</li>`).join("") || ""}
        </ul>
        </section>

        <section style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05); margin-bottom: 20px;">
        <h2 style="color: #1a73e8; margin-bottom: 10px;">Tags</h2>
        <p style="color: #555;">${summary.tags?.join(", ") || ""}</p>
        </section>

        <footer style="text-align: center; color: #999; font-size: 12px; margin-top: 30px;">
        <p>Generated by AI Meeting Notes Summarizer</p>
        </footer>
    </div>
    `;

  // Prepare mail options
  const mailOptions = {
    from: process.env.GMAIL_USER,
    to: recipients.join(","),
    subject: subject || "Meeting Summary",
    html: htmlContent
  };

  // Send mail
  try {
    const info = await transporter.sendMail(mailOptions);
    console.log("Email sent: " + info.response);
    return { success: true, messageId: info.messageId };
  } catch (error) {
    console.error("Error sending email:", error);
    return { success: false, error: error.message };
  }
};
